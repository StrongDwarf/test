stages:
  - lint
  - test
  - build
  - package
  - deploy

lint:
  stage: lint
  except:
    - master
  cache:
    paths:
      - "node_modules/"
  image: node:lts-alpine
  before_script:
    - "install -m 0600 /dev/null $HOME/.npmrc"
    - "echo \"//$NPM_REGISTRY/:_authToken=\\\"$NPM_AUTH_TOKEN\\\"\" > $HOME/.npmrc"
    - "npm config set registry https://$NPM_REGISTRY"
  script:
    - "npm install"
    - "npm run lint"

build:
  stage: build
  only:
    - master
  artifacts:
    name: "$CI_COMMIT_TAG"
    paths:
      - "dist/"
  cache:
    paths:
      - "node_modules/"
    policy: pull
  image: node:lts-alpine
  before_script:
    - "install -m 0600 /dev/null $HOME/.npmrc"
    - "echo \"//$NPM_REGISTRY/:_authToken=\\\"$NPM_AUTH_TOKEN\\\"\" > $HOME/.npmrc"
    - "npm config set registry https://$NPM_REGISTRY"
  script:
    - "npm install"
    - "npm run build"

package:
  stage: package
  only:
    - master
  dependencies:
    - build
  image: docker
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - "echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY"
  script:
    - "docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA ."
    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - "[ -n \"$CI_COMMIT_TAG\" ] && docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - "[ -n \"$CI_COMMIT_TAG\" ] && docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest"
    - "docker push $CI_REGISTRY_IMAGE:latest"
    - "docker image prune -af"

deploy:
  stage: deploy
  only:
    - tags
  except:
    - branches
  dependencies:
    - build
  environment:
    name: production
  when: manual
  image: alpine
  script:
    - "echo \"deploy to production ...\""
  after_script:
    - "rm -fr dist/"
